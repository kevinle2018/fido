#[include adxl.cfg]

[include mainsail.cfg]
#[include K-ShakeTune/*.cfg]
[include config_backup.cfg]
[include print_start.cfg]
[include dangerklipper_features.cfg]
[include beacon.cfg]
[include input_shaper.cfg]
[include gantry.cfg]
[include z_motors.cfg]
[include toolhead.cfg]
[include bedfans.cfg]
[include toolhead_leds.cfg]
[include print_end.cfg]
[include heatsoak.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_15003E001251313338343730-if00
restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu




[printer]
kinematics: corexy
max_velocity: 500
max_accel: 9000             #Max 4000
max_z_velocity: 25          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 30
square_corner_velocity: 5.0



#####################################################################
#   Bed Heater
#####################################################################
##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PF6
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: MAX31865
spi_bus: spi3a
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
sensor_pin: PA8
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 1
min_temp: 0
max_temp: 200
control: mpc
heater_power: 750
cooling_fan: fan_generic BedFans

[verify_heater heater_bed]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 0.5
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


##Chamber Heater
[heater_generic ch]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PC5
gcode_id: cha
heater_pin: PA2
min_temp: 0
max_temp: 100
control: pid
pid_Kp: 70.184
pid_Ki: 0.376
pid_Kd: 3274.071


[controller_fan ch_fan]
pin: PF7
heater: ch
idle_timeout: 60
stepper:

[verify_heater ch]
hysteresis = 3
check_gain_time = 240
heating_gain: .1
check_gain_time:600
max_error: 500



#####################################################################
#   Fan Control
#####################################################################

[temperature_sensor mcu]
sensor_type: temperature_mcu
sensor_mcu: mcu

[temperature_sensor host]
sensor_type: temperature_host

##  Controller fan - FAN2
[controller_fan controller_fan_upper]
pin: PA6
tachometer_pin: PC1
kick_start_time: 0.5
stepper: stepper_x

[controller_fan controller_fan_lower]
pin: PE8
tachometer_pin: PG0
kick_start_time: 0.5
stepper: stepper_x

[temperature_sensor front]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PC4
min_temp: 0
max_temp: 200

[temperature_sensor gantry]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA7
min_temp: 0
max_temp: 200

[temperature_sensor fins]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PB1
min_temp: 0
max_temp: 200

#####################################################################
#   LED Control
#####################################################################

[output_pin daylight]
pin: PF9
pwm: True
shutdown_value: 0
value:0.05
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[quad_gantry_level]
##  Gantry Corners for 350mm Build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25
   
speed: 500
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0075
max_adjust: 20


[bed_mesh]
speed: 500
horizontal_move_z: 16
mesh_min: 40, 50
mesh_max: 310,320
zero_reference_position: 175,175 #for use with stock z endstop
#fade_start: 0.6
#fade_end: 10.0
probe_count: 99,31 # Values should be odd, so one point is directly at bed center
algorithm: bicubic

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG5, EXP1_2=PG4,
    EXP1_3=PG3, EXP1_4=PG2,
    EXP1_5=PD15, EXP1_6=PD14,
    EXP1_7=PD13, EXP1_8=PD12,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG8, EXP2_4=PE11,
    EXP2_5=PG7, EXP2_6=PE14,
    EXP2_7=PG6, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

#  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
#   Macros
#####################################################################
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    SAVE_GCODE_STATE NAME=QUADGANTRYLEVEL
    STATUS_LEVELING
    {% if not printer.quad_gantry_level.applied %}
        BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=10 RETRY_TOLERANCE=1
    {% endif %}
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=2
    RESTORE_GCODE_STATE NAME=QUADGANTRYLEVEL

[gcode_macro PARK]
gcode:
    STATUS_BUSY
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30
    STATUS_READY
    

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    STATUS_HOMING
    G90
    G28 X0 Y0
    STATUS_CALIBRATING_Z
    G28 Z
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}






  
   



#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = mpc
#*# block_heat_capacity = 4401.36
#*# sensor_responsiveness = 0.00689994
#*# ambient_transfer = 2.27000
#*# fan_ambient_transfer = 2.27, 3.16521, 4.65973, 4.06886, 5.27274
#*#
#*# [extruder]
#*# block_heat_capacity = 32.6126
#*# sensor_responsiveness = 0.0891165
#*# ambient_transfer = 0.137969
#*# fan_ambient_transfer = 0.137969, 0.175826, 0.1986, 0.218526, 0.232231, 0.245304, 0.256477
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.026519, 0.003702, 0.001328, -0.000253, 0.000872, -0.004975, -0.000117, 0.001847, -0.000259, -0.004879, -0.005328, -0.009930, 0.002047, -0.009411, -0.015206, -0.016706, -0.024614, -0.004063, -0.012011, -0.004390, -0.023964, -0.001735, -0.011384, -0.021181, 0.000424, -0.021920, -0.000682, -0.006707, -0.002312, -0.009666, -0.006274
#*# 	-0.018136, 0.009908, 0.008820, 0.019182, 0.017655, 0.013789, 0.006909, 0.011899, 0.005039, 0.010185, 0.002873, 0.007038, 0.001240, 0.001527, 0.002657, 0.000626, 0.001130, 0.002423, -0.004951, -0.000008, 0.001538, -0.001539, -0.000607, -0.000853, 0.001578, 0.001274, 0.007320, 0.007242, 0.001826, -0.003263, -0.021525
#*# 	0.014834, 0.022559, 0.016661, 0.020585, 0.021781, 0.021902, 0.029684, 0.021089, 0.018360, 0.027377, 0.026095, 0.014817, 0.009076, 0.000491, 0.006257, 0.014445, 0.007977, 0.015052, 0.004249, 0.004010, 0.000408, 0.002331, 0.006930, 0.000141, 0.014755, 0.008101, 0.012843, 0.003462, 0.027056, -0.002219, -0.001562
#*# 	0.022866, 0.040023, 0.037121, 0.034265, 0.042567, 0.034306, 0.025951, 0.030330, 0.022533, 0.026974, 0.028079, 0.027370, 0.025226, 0.025345, 0.019199, 0.024339, 0.016281, 0.015575, 0.025217, 0.006355, 0.023705, 0.001709, 0.009338, 0.004105, 0.007581, 0.024621, 0.023282, 0.000306, 0.013402, 0.003527, 0.001351
#*# 	0.027695, 0.033431, 0.038126, 0.045414, 0.035630, 0.046816, 0.033313, 0.035957, 0.028607, 0.056427, 0.032066, 0.022855, 0.025750, 0.029756, 0.026596, 0.024613, 0.025049, 0.022458, 0.028801, 0.027967, 0.013170, 0.006129, 0.016150, 0.015994, 0.004773, 0.010098, 0.013209, 0.022469, 0.018698, 0.002237, 0.002986
#*# 	0.030245, 0.055224, 0.055156, 0.053122, 0.056190, 0.046101, 0.045400, 0.041686, 0.041246, 0.039229, 0.036969, 0.038915, 0.029725, 0.034724, 0.039483, 0.030828, 0.029850, 0.028940, 0.028242, 0.031777, 0.022454, 0.022604, 0.022103, 0.014632, 0.007931, -0.001876, 0.025649, 0.012511, 0.020891, 0.008435, 0.000586
#*# 	0.042563, 0.058300, 0.028922, 0.056384, 0.054603, 0.053087, 0.055669, 0.039549, 0.050254, 0.047843, 0.033338, 0.029565, 0.029769, 0.036112, 0.040224, 0.028740, 0.034453, 0.032835, 0.027348, 0.020785, 0.013535, 0.009882, 0.026166, 0.015909, 0.001711, 0.002326, 0.012207, 0.003004, 0.007969, 0.002969, 0.001308
#*# 	0.043410, 0.055732, 0.055045, 0.058851, 0.053413, 0.057736, 0.056538, 0.042119, 0.055002, 0.038746, 0.055728, 0.035746, 0.032688, 0.030494, 0.031941, 0.036534, 0.027180, 0.027524, 0.028874, 0.028923, 0.023347, 0.026073, 0.012260, -0.000445, 0.013780, 0.002626, 0.007317, 0.012302, 0.016355, 0.000007, -0.012585
#*# 	0.052242, 0.057119, 0.053753, 0.053738, 0.062173, 0.055646, 0.053963, 0.052557, 0.054873, 0.040292, 0.045750, 0.039919, 0.035089, 0.030251, 0.039725, 0.032376, 0.036749, 0.031822, 0.026231, 0.025443, 0.020207, 0.012463, 0.013907, 0.012716, 0.003186, 0.000304, 0.001765, 0.002180, 0.002597, 0.000573, -0.010942
#*# 	0.040039, 0.066539, 0.065670, 0.075626, 0.054725, 0.056529, 0.054447, 0.053632, 0.032685, 0.034040, 0.048860, 0.034550, 0.035640, 0.029370, 0.028928, 0.027322, 0.025033, 0.025372, 0.016544, 0.013747, 0.024775, 0.002997, 0.000551, -0.004928, 0.001513, -0.013328, -0.001415, -0.000808, -0.012801, -0.010880, -0.021665
#*# 	0.045368, 0.055599, 0.055556, 0.053443, 0.062797, 0.056337, 0.050093, 0.051232, 0.053698, 0.032093, 0.047254, 0.031971, 0.028381, 0.031483, 0.038564, 0.028753, 0.028650, 0.014863, 0.011702, 0.009717, 0.010141, 0.002439, 0.000957, -0.002464, -0.003647, -0.019460, -0.000895, -0.005132, -0.011754, -0.022256, -0.028944
#*# 	0.052795, 0.055651, 0.055809, 0.060250, 0.058163, 0.041369, 0.032434, 0.038959, 0.044803, 0.029933, 0.039614, 0.041848, 0.029216, 0.031067, 0.026725, 0.027148, 0.026957, 0.013699, 0.005444, -0.000083, 0.000232, -0.007007, -0.002371, -0.012458, -0.021538, -0.013201, -0.027088, -0.005318, -0.026115, -0.017632, -0.042450
#*# 	0.043116, 0.029701, 0.052286, 0.050004, 0.055533, 0.038790, 0.028973, 0.033730, 0.029873, 0.032678, 0.034042, 0.037119, 0.026567, 0.027882, 0.023953, 0.017542, 0.027784, 0.010544, 0.009625, -0.002216, 0.001533, -0.007366, -0.013570, -0.024813, -0.020769, -0.022859, -0.014351, -0.025124, -0.030712, -0.025174, -0.037634
#*# 	0.028124, 0.041624, 0.055783, 0.034114, 0.046133, 0.029012, 0.030197, 0.025625, 0.026800, 0.025796, 0.021979, 0.034371, 0.015867, 0.024733, 0.027256, 0.027033, 0.021074, 0.005789, 0.002658, -0.007911, -0.000025, -0.023964, -0.017307, -0.024028, -0.014603, -0.028402, -0.020172, -0.028342, -0.028228, -0.034223, -0.052711
#*# 	0.027427, 0.032393, 0.040362, 0.031701, 0.030752, 0.030340, 0.030276, 0.022857, 0.030636, 0.027136, 0.027222, 0.015716, 0.015650, 0.013721, 0.024405, 0.020068, 0.003158, 0.002455, -0.000202, 0.002130, -0.014122, -0.019979, -0.025176, -0.019244, -0.026314, -0.028624, -0.030859, -0.029674, -0.033749, -0.050292, -0.047157
#*# 	0.026064, 0.044444, 0.041612, 0.046049, 0.031423, 0.029428, 0.024078, 0.020593, 0.025855, 0.023142, 0.020506, 0.028085, 0.008852, 0.024288, 0.009306, 0.004729, 0.004819, 0.011309, -0.002860, -0.007613, -0.002381, -0.024088, -0.014611, -0.025828, -0.025919, -0.039842, -0.029407, -0.028343, -0.033453, -0.041633, -0.047073
#*# 	0.019758, 0.029635, 0.021636, 0.029301, 0.028584, 0.027618, 0.029515, 0.025717, 0.024865, 0.015040, 0.024264, 0.009754, 0.019906, 0.020457, 0.014630, 0.019367, -0.000305, 0.005520, 0.000186, -0.001478, 0.000789, -0.023805, -0.021946, -0.015611, -0.031433, -0.027545, -0.027977, -0.043774, -0.029556, -0.051101, -0.053792
#*# 	0.004835, 0.042948, 0.029501, 0.030213, 0.029174, 0.028123, 0.017407, 0.023475, 0.020898, 0.027512, 0.009084, 0.000834, 0.010165, 0.019914, 0.013308, 0.012585, 0.003065, 0.003132, 0.000935, -0.003965, -0.012220, -0.021596, -0.013339, -0.025384, -0.025141, -0.033977, -0.028244, -0.032924, -0.029115, -0.032585, -0.047498
#*# 	0.014980, 0.012391, 0.029907, 0.029463, 0.031377, 0.021910, 0.029177, 0.023994, 0.021235, 0.028366, 0.025720, 0.013030, 0.010684, 0.001228, 0.003330, 0.004522, 0.020234, 0.002020, -0.001398, -0.002746, -0.002021, 0.000580, -0.023852, -0.012472, -0.025219, -0.028369, -0.030213, -0.032631, -0.032882, -0.045341, -0.050270
#*# 	-0.001442, 0.039437, 0.047097, 0.054383, 0.037896, 0.027649, 0.027702, 0.016093, 0.025494, 0.024444, 0.021327, 0.027986, 0.013881, 0.028028, 0.009987, 0.006780, 0.012624, 0.001848, 0.004878, -0.009816, 0.000337, -0.009203, -0.012054, -0.017861, -0.023779, -0.027361, -0.026408, -0.025356, -0.028408, -0.024535, -0.046169
#*# 	0.004600, 0.015276, 0.031235, 0.028472, 0.029708, 0.031063, 0.029290, 0.023701, 0.018357, 0.022457, 0.010822, 0.014529, 0.013951, 0.026659, 0.016247, 0.012219, 0.021210, 0.003939, 0.007934, 0.001100, -0.000547, -0.013054, -0.003614, -0.018565, -0.007550, -0.025612, -0.018557, -0.022379, -0.019380, -0.028546, -0.036570
#*# 	-0.001247, 0.015672, 0.042441, 0.032949, 0.035117, 0.025921, 0.025763, 0.027008, 0.018716, 0.029207, 0.013791, 0.004977, 0.015992, 0.024059, 0.017895, 0.012753, 0.011534, 0.003376, 0.027002, 0.000818, 0.000689, 0.000677, 0.006337, -0.022270, -0.000198, -0.024998, -0.012445, -0.010905, -0.017272, -0.012799, -0.030930
#*# 	0.004552, 0.014744, 0.012501, 0.021085, 0.029115, 0.028590, 0.025034, 0.027447, 0.026764, 0.026120, 0.022465, 0.005866, 0.011662, 0.020741, 0.011912, 0.025239, 0.024366, 0.016556, 0.006010, 0.008089, 0.001551, -0.004568, 0.003409, -0.013338, -0.006682, -0.020633, -0.011941, -0.010461, -0.001622, -0.026547, -0.019475
#*# 	-0.016139, 0.015413, 0.030772, 0.030167, 0.027293, 0.036529, 0.027265, 0.029348, 0.020592, 0.024179, 0.024876, 0.027488, 0.012274, 0.015964, 0.024527, 0.017371, 0.025643, 0.019711, 0.016356, 0.013013, 0.001338, 0.000289, 0.001117, -0.000799, -0.007804, -0.014168, -0.000927, -0.017814, -0.012587, -0.000630, -0.020594
#*# 	-0.017850, 0.008659, 0.014002, 0.022125, 0.027670, 0.032802, 0.030345, 0.028240, 0.028698, 0.014373, 0.016591, 0.020664, 0.023394, 0.007804, 0.013417, 0.022807, 0.016845, 0.019703, 0.008720, 0.002331, 0.006868, 0.004523, 0.003468, -0.007315, -0.008372, -0.013003, -0.001477, -0.003137, -0.000070, -0.011359, -0.023459
#*# 	-0.021526, 0.013629, 0.023735, 0.029441, 0.028370, 0.029785, 0.026256, 0.025628, 0.017129, 0.019067, 0.013604, 0.025530, 0.028044, 0.018322, 0.027281, 0.021542, 0.020225, 0.019465, 0.006509, 0.002347, 0.009088, 0.003001, 0.004786, -0.000674, 0.001827, -0.001551, -0.000413, -0.003982, 0.001678, -0.009196, -0.022639
#*# 	-0.023897, 0.006201, 0.006693, 0.002014, 0.031108, 0.027020, 0.028652, 0.029144, 0.028638, 0.018313, 0.023211, 0.014642, 0.016502, 0.021863, 0.027180, 0.023127, 0.022054, 0.024828, 0.013353, 0.004894, 0.002381, 0.002946, -0.000580, 0.000880, 0.000412, 0.000504, 0.002030, 0.001310, 0.005368, 0.000602, -0.001007
#*# 	-0.011287, 0.009811, 0.026644, 0.028266, 0.022375, 0.024194, 0.005071, 0.025566, 0.028381, 0.014352, 0.024535, 0.016405, 0.019667, 0.026661, 0.016207, 0.023375, 0.022086, 0.011035, 0.021121, 0.015998, 0.005043, 0.009305, 0.005588, 0.005857, 0.010197, 0.002039, 0.001050, -0.007429, 0.006386, 0.002205, -0.018214
#*# 	-0.023618, -0.000281, 0.001953, 0.009939, 0.007782, 0.010192, 0.022934, 0.017513, 0.010182, 0.019174, 0.027493, 0.026058, 0.019327, 0.020411, 0.023873, 0.027036, 0.027949, 0.025401, 0.013787, 0.026295, 0.016186, 0.002241, 0.011110, 0.000336, -0.000007, -0.000033, 0.008265, -0.003289, 0.001965, -0.001918, -0.017223
#*# 	-0.025236, -0.000744, 0.009548, 0.016580, 0.005756, 0.006511, 0.000934, 0.002428, 0.005488, 0.006238, 0.015472, 0.003268, 0.016195, 0.014923, 0.020210, 0.006024, 0.022285, 0.004472, 0.003444, 0.008034, 0.004544, -0.001245, 0.002201, -0.000378, -0.003859, -0.023477, -0.000571, -0.006324, -0.002864, 0.000931, -0.020326
#*# 	-0.070346, -0.047121, -0.035253, -0.031333, -0.031794, -0.013665, -0.024596, -0.025512, -0.018127, -0.023766, -0.020266, -0.026610, -0.023921, -0.024684, -0.008272, -0.026218, 0.000287, -0.000372, -0.024040, -0.017675, -0.028247, -0.027817, -0.023741, -0.021775, -0.041085, -0.042716, -0.049299, -0.040498, -0.037390, -0.042994, -0.049789
#*# x_count = 31
#*# y_count = 31
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 290.0
#*# min_y = 20.0
#*# max_y = 290.0
#*#
#*# [input_shaper]
#*#
#*# [probe]
#*# z_offset = 12.840
#*#
#*# [stepper_z]
#*# position_endstop = -0.659
#*#
#*# [beacon model default]
#*# model_coef = 1.4724058261748973,
#*# 	1.8254485727127945,
#*# 	0.8204775572727313,
#*# 	0.44428546464121693,
#*# 	0.443065583071944,
#*# 	0.23458340504781297,
#*# 	-0.4233104188315272,
#*# 	-0.3217771488424295,
#*# 	0.28816055373035165,
#*# 	0.2190911709770046
#*# model_domain = 1.807436977193245e-07,1.9205718286512815e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 33.340040
#*# model_offset = 0.00000
#*#
#*# [ch]
#*# pid_version = 1
#*# pid_target = 65.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 76.633
#*# pid_ki = 0.079
#*# pid_kd = 18478.178
